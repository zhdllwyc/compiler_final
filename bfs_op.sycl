//==-------------------------------------------------------==//
//
// WARNING: This file is auto-generated. Do not modify.
//
// SYCL Device Compiler:
//   Codeplay ComputeCpp - CE 2.2.1 Device Compiler - clang version 8.0.0  (based on LLVM 8.0.0svn)
//
//==-------------------------------------------------------==//
#ifndef CODEPLAY_SYCL_bfs_op_cpp_STUB
#define CODEPLAY_SYCL_bfs_op_cpp_STUB

#include <SYCL/sycl_ih.hpp>

namespace cl {
namespace sycl {
namespace detail {
namespace {
// SYCL kernel traits primary template
template <typename T>
struct kernel_info;

 static_assert(2== COMPUTECPP_VERSION_MAJOR &&
2== COMPUTECPP_VERSION_MINOR &&
1== COMPUTECPP_VERSION_PATCH,"Error: Mismatch between compiler and runtime. Please ensure both are at the latest version. Compiler is version:2.2.1 Runtime: " __COMPUTECPP__ );

} // namespace
} // namespace detail
} // namespace sycl
} // namespace cl
namespace cl {
namespace sycl {
namespace detail {
namespace {
unsigned char SYCL_bfs_op_cpp_bin_nvptx64[] = {
  0x2f, 0x2f, 0x0a, 0x2f, 0x2f, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
  0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x4c, 0x4c, 0x56, 0x4d, 0x20,
  0x4e, 0x56, 0x50, 0x54, 0x58, 0x20, 0x42, 0x61, 0x63, 0x6b, 0x2d, 0x45,
  0x6e, 0x64, 0x0a, 0x2f, 0x2f, 0x0a, 0x0a, 0x2e, 0x76, 0x65, 0x72, 0x73,
  0x69, 0x6f, 0x6e, 0x20, 0x33, 0x2e, 0x32, 0x0a, 0x2e, 0x74, 0x61, 0x72,
  0x67, 0x65, 0x74, 0x20, 0x73, 0x6d, 0x5f, 0x32, 0x30, 0x2c, 0x20, 0x74,
  0x65, 0x78, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x70,
  0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x0a, 0x2e, 0x61, 0x64, 0x64, 0x72,
  0x65, 0x73, 0x73, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x36, 0x34, 0x0a,
  0x0a, 0x09, 0x2f, 0x2f, 0x20, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x6c, 0x09,
  0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62,
  0x66, 0x73, 0x5f, 0x4f, 0x50, 0x20, 0x2f, 0x2f, 0x20, 0x2d, 0x2d, 0x20,
  0x42, 0x65, 0x67, 0x69, 0x6e, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
  0x6f, 0x6e, 0x20, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61, 0x73,
  0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x0a, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x2f, 0x2f, 0x20, 0x40, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c,
  0x61, 0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x0a, 0x2e,
  0x65, 0x6e, 0x74, 0x72, 0x79, 0x20, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63,
  0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x28,
  0x0a, 0x09, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x20, 0x2e, 0x75, 0x36,
  0x34, 0x20, 0x2e, 0x70, 0x74, 0x72, 0x20, 0x2e, 0x67, 0x6c, 0x6f, 0x62,
  0x61, 0x6c, 0x20, 0x2e, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x20, 0x34, 0x20,
  0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62,
  0x66, 0x73, 0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f,
  0x30, 0x2c, 0x0a, 0x09, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x20, 0x2e,
  0x75, 0x36, 0x34, 0x20, 0x2e, 0x70, 0x74, 0x72, 0x20, 0x2e, 0x67, 0x6c,
  0x6f, 0x62, 0x61, 0x6c, 0x20, 0x2e, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x20,
  0x34, 0x20, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
  0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61, 0x72, 0x61,
  0x6d, 0x5f, 0x31, 0x2c, 0x0a, 0x09, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d,
  0x20, 0x2e, 0x75, 0x36, 0x34, 0x20, 0x2e, 0x70, 0x74, 0x72, 0x20, 0x2e,
  0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x20, 0x2e, 0x61, 0x6c, 0x69, 0x67,
  0x6e, 0x20, 0x34, 0x20, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61,
  0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61,
  0x72, 0x61, 0x6d, 0x5f, 0x32, 0x2c, 0x0a, 0x09, 0x2e, 0x70, 0x61, 0x72,
  0x61, 0x6d, 0x20, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x53, 0x59, 0x43, 0x4c,
  0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f,
  0x50, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x33, 0x2c, 0x0a, 0x09,
  0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x20, 0x2e, 0x75, 0x36, 0x34, 0x20,
  0x2e, 0x70, 0x74, 0x72, 0x20, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
  0x20, 0x2e, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x20, 0x34, 0x20, 0x53, 0x59,
  0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x66, 0x73,
  0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x34, 0x2c,
  0x0a, 0x09, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x20, 0x2e, 0x75, 0x36,
  0x34, 0x20, 0x2e, 0x70, 0x74, 0x72, 0x20, 0x2e, 0x67, 0x6c, 0x6f, 0x62,
  0x61, 0x6c, 0x20, 0x2e, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x20, 0x34, 0x20,
  0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62,
  0x66, 0x73, 0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f,
  0x35, 0x2c, 0x0a, 0x09, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x20, 0x2e,
  0x75, 0x36, 0x34, 0x20, 0x2e, 0x70, 0x74, 0x72, 0x20, 0x2e, 0x67, 0x6c,
  0x6f, 0x62, 0x61, 0x6c, 0x20, 0x2e, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x20,
  0x34, 0x20, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
  0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61, 0x72, 0x61,
  0x6d, 0x5f, 0x36, 0x2c, 0x0a, 0x09, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d,
  0x20, 0x2e, 0x75, 0x36, 0x34, 0x20, 0x2e, 0x70, 0x74, 0x72, 0x20, 0x2e,
  0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x20, 0x2e, 0x61, 0x6c, 0x69, 0x67,
  0x6e, 0x20, 0x34, 0x20, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61,
  0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61,
  0x72, 0x61, 0x6d, 0x5f, 0x37, 0x2c, 0x0a, 0x09, 0x2e, 0x70, 0x61, 0x72,
  0x61, 0x6d, 0x20, 0x2e, 0x75, 0x36, 0x34, 0x20, 0x2e, 0x70, 0x74, 0x72,
  0x20, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x20, 0x2e, 0x61, 0x6c,
  0x69, 0x67, 0x6e, 0x20, 0x34, 0x20, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63,
  0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x5f,
  0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x38, 0x2c, 0x0a, 0x09, 0x2e, 0x70,
  0x61, 0x72, 0x61, 0x6d, 0x20, 0x2e, 0x75, 0x36, 0x34, 0x20, 0x2e, 0x70,
  0x74, 0x72, 0x20, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x20, 0x2e,
  0x61, 0x6c, 0x69, 0x67, 0x6e, 0x20, 0x34, 0x20, 0x53, 0x59, 0x43, 0x4c,
  0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f,
  0x50, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x39, 0x0a, 0x29, 0x0a,
  0x7b, 0x0a, 0x09, 0x2e, 0x72, 0x65, 0x67, 0x20, 0x2e, 0x70, 0x72, 0x65,
  0x64, 0x20, 0x09, 0x25, 0x70, 0x3c, 0x36, 0x3e, 0x3b, 0x0a, 0x09, 0x2e,
  0x72, 0x65, 0x67, 0x20, 0x2e, 0x62, 0x33, 0x32, 0x20, 0x09, 0x25, 0x72,
  0x3c, 0x32, 0x34, 0x3e, 0x3b, 0x0a, 0x09, 0x2e, 0x72, 0x65, 0x67, 0x20,
  0x2e, 0x62, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x3c, 0x33, 0x35,
  0x3e, 0x3b, 0x0a, 0x0a, 0x2f, 0x2f, 0x20, 0x25, 0x62, 0x62, 0x2e, 0x30,
  0x3a, 0x0a, 0x09, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2e,
  0x75, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x31, 0x36, 0x2c, 0x20,
  0x5b, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
  0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
  0x5f, 0x30, 0x5d, 0x3b, 0x0a, 0x09, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x72,
  0x61, 0x6d, 0x2e, 0x75, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x31,
  0x37, 0x2c, 0x20, 0x5b, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61,
  0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61,
  0x72, 0x61, 0x6d, 0x5f, 0x31, 0x5d, 0x3b, 0x0a, 0x09, 0x6d, 0x6f, 0x76,
  0x2e, 0x75, 0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x38, 0x2c, 0x20, 0x25,
  0x63, 0x74, 0x61, 0x69, 0x64, 0x2e, 0x78, 0x3b, 0x0a, 0x09, 0x6c, 0x64,
  0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x75, 0x36, 0x34, 0x20, 0x09,
  0x25, 0x72, 0x64, 0x31, 0x38, 0x2c, 0x20, 0x5b, 0x53, 0x59, 0x43, 0x4c,
  0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f,
  0x50, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x32, 0x5d, 0x3b, 0x0a,
  0x09, 0x6d, 0x6f, 0x76, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09, 0x25, 0x72,
  0x39, 0x2c, 0x20, 0x25, 0x6e, 0x74, 0x69, 0x64, 0x2e, 0x78, 0x3b, 0x0a,
  0x09, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x73, 0x33,
  0x32, 0x20, 0x09, 0x25, 0x72, 0x64, 0x31, 0x39, 0x2c, 0x20, 0x5b, 0x53,
  0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x66,
  0x73, 0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x33,
  0x5d, 0x3b, 0x0a, 0x09, 0x6d, 0x6f, 0x76, 0x2e, 0x75, 0x33, 0x32, 0x20,
  0x09, 0x25, 0x72, 0x31, 0x30, 0x2c, 0x20, 0x25, 0x74, 0x69, 0x64, 0x2e,
  0x78, 0x3b, 0x0a, 0x09, 0x6d, 0x61, 0x64, 0x2e, 0x6c, 0x6f, 0x2e, 0x73,
  0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x31, 0x31, 0x2c, 0x20, 0x25, 0x72,
  0x39, 0x2c, 0x20, 0x25, 0x72, 0x38, 0x2c, 0x20, 0x25, 0x72, 0x31, 0x30,
  0x3b, 0x0a, 0x09, 0x63, 0x76, 0x74, 0x2e, 0x75, 0x36, 0x34, 0x2e, 0x75,
  0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x64, 0x31, 0x2c, 0x20, 0x25, 0x72,
  0x31, 0x31, 0x3b, 0x0a, 0x09, 0x6d, 0x75, 0x6c, 0x2e, 0x77, 0x69, 0x64,
  0x65, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x64, 0x32, 0x30,
  0x2c, 0x20, 0x25, 0x72, 0x31, 0x31, 0x2c, 0x20, 0x34, 0x3b, 0x0a, 0x09,
  0x61, 0x64, 0x64, 0x2e, 0x73, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64,
  0x32, 0x31, 0x2c, 0x20, 0x25, 0x72, 0x64, 0x31, 0x36, 0x2c, 0x20, 0x25,
  0x72, 0x64, 0x32, 0x30, 0x3b, 0x0a, 0x09, 0x73, 0x74, 0x2e, 0x67, 0x6c,
  0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09, 0x5b, 0x25,
  0x72, 0x64, 0x32, 0x31, 0x5d, 0x2c, 0x20, 0x25, 0x72, 0x31, 0x31, 0x3b,
  0x0a, 0x09, 0x61, 0x64, 0x64, 0x2e, 0x73, 0x36, 0x34, 0x20, 0x09, 0x25,
  0x72, 0x64, 0x32, 0x32, 0x2c, 0x20, 0x25, 0x72, 0x64, 0x31, 0x37, 0x2c,
  0x20, 0x25, 0x72, 0x64, 0x32, 0x30, 0x3b, 0x0a, 0x09, 0x73, 0x74, 0x2e,
  0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09,
  0x5b, 0x25, 0x72, 0x64, 0x32, 0x32, 0x5d, 0x2c, 0x20, 0x25, 0x72, 0x38,
  0x3b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x2e, 0x73, 0x36, 0x34, 0x20, 0x09,
  0x25, 0x72, 0x64, 0x32, 0x33, 0x2c, 0x20, 0x25, 0x72, 0x64, 0x31, 0x38,
  0x2c, 0x20, 0x25, 0x72, 0x64, 0x32, 0x30, 0x3b, 0x0a, 0x09, 0x73, 0x74,
  0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x75, 0x33, 0x32, 0x20,
  0x09, 0x5b, 0x25, 0x72, 0x64, 0x32, 0x33, 0x5d, 0x2c, 0x20, 0x25, 0x72,
  0x31, 0x30, 0x3b, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x70, 0x2e, 0x67, 0x65,
  0x2e, 0x75, 0x36, 0x34, 0x20, 0x09, 0x25, 0x70, 0x31, 0x2c, 0x20, 0x25,
  0x72, 0x64, 0x31, 0x2c, 0x20, 0x25, 0x72, 0x64, 0x31, 0x39, 0x3b, 0x0a,
  0x09, 0x40, 0x25, 0x70, 0x31, 0x20, 0x62, 0x72, 0x61, 0x20, 0x09, 0x4c,
  0x42, 0x42, 0x30, 0x5f, 0x37, 0x3b, 0x0a, 0x2f, 0x2f, 0x20, 0x25, 0x62,
  0x62, 0x2e, 0x31, 0x3a, 0x0a, 0x09, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x72,
  0x61, 0x6d, 0x2e, 0x75, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x31,
  0x30, 0x2c, 0x20, 0x5b, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61,
  0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61,
  0x72, 0x61, 0x6d, 0x5f, 0x34, 0x5d, 0x3b, 0x0a, 0x09, 0x73, 0x68, 0x6c,
  0x2e, 0x62, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x32, 0x34, 0x2c,
  0x20, 0x25, 0x72, 0x64, 0x31, 0x2c, 0x20, 0x32, 0x3b, 0x0a, 0x09, 0x61,
  0x64, 0x64, 0x2e, 0x73, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x32,
  0x2c, 0x20, 0x25, 0x72, 0x64, 0x31, 0x30, 0x2c, 0x20, 0x25, 0x72, 0x64,
  0x32, 0x34, 0x3b, 0x0a, 0x09, 0x6c, 0x64, 0x2e, 0x67, 0x6c, 0x6f, 0x62,
  0x61, 0x6c, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x31, 0x32,
  0x2c, 0x20, 0x5b, 0x25, 0x72, 0x64, 0x32, 0x5d, 0x3b, 0x0a, 0x09, 0x73,
  0x65, 0x74, 0x70, 0x2e, 0x6e, 0x65, 0x2e, 0x73, 0x33, 0x32, 0x20, 0x09,
  0x25, 0x70, 0x32, 0x2c, 0x20, 0x25, 0x72, 0x31, 0x32, 0x2c, 0x20, 0x31,
  0x3b, 0x0a, 0x09, 0x40, 0x25, 0x70, 0x32, 0x20, 0x62, 0x72, 0x61, 0x20,
  0x09, 0x4c, 0x42, 0x42, 0x30, 0x5f, 0x37, 0x3b, 0x0a, 0x2f, 0x2f, 0x20,
  0x25, 0x62, 0x62, 0x2e, 0x32, 0x3a, 0x0a, 0x09, 0x6c, 0x64, 0x2e, 0x70,
  0x61, 0x72, 0x61, 0x6d, 0x2e, 0x75, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72,
  0x64, 0x31, 0x32, 0x2c, 0x20, 0x5b, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63,
  0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x5f,
  0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x36, 0x5d, 0x3b, 0x0a, 0x09, 0x6c,
  0x64, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x75, 0x36, 0x34, 0x20,
  0x09, 0x25, 0x72, 0x64, 0x31, 0x31, 0x2c, 0x20, 0x5b, 0x53, 0x59, 0x43,
  0x4c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f,
  0x4f, 0x50, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x35, 0x5d, 0x3b,
  0x0a, 0x09, 0x6d, 0x6f, 0x76, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09, 0x25,
  0x72, 0x31, 0x33, 0x2c, 0x20, 0x30, 0x3b, 0x0a, 0x09, 0x73, 0x74, 0x2e,
  0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09,
  0x5b, 0x25, 0x72, 0x64, 0x32, 0x5d, 0x2c, 0x20, 0x25, 0x72, 0x31, 0x33,
  0x3b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x2e, 0x73, 0x36, 0x34, 0x20, 0x09,
  0x25, 0x72, 0x64, 0x32, 0x36, 0x2c, 0x20, 0x25, 0x72, 0x64, 0x31, 0x31,
  0x2c, 0x20, 0x25, 0x72, 0x64, 0x32, 0x34, 0x3b, 0x0a, 0x09, 0x6d, 0x6f,
  0x76, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x31, 0x34, 0x2c,
  0x20, 0x31, 0x3b, 0x0a, 0x09, 0x73, 0x74, 0x2e, 0x67, 0x6c, 0x6f, 0x62,
  0x61, 0x6c, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09, 0x5b, 0x25, 0x72, 0x64,
  0x32, 0x36, 0x5d, 0x2c, 0x20, 0x25, 0x72, 0x31, 0x34, 0x3b, 0x0a, 0x09,
  0x62, 0x61, 0x72, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x20, 0x09, 0x30, 0x3b,
  0x0a, 0x09, 0x61, 0x64, 0x64, 0x2e, 0x73, 0x36, 0x34, 0x20, 0x09, 0x25,
  0x72, 0x64, 0x33, 0x2c, 0x20, 0x25, 0x72, 0x64, 0x31, 0x32, 0x2c, 0x20,
  0x25, 0x72, 0x64, 0x32, 0x34, 0x3b, 0x0a, 0x09, 0x6c, 0x64, 0x2e, 0x67,
  0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09, 0x25,
  0x72, 0x32, 0x32, 0x2c, 0x20, 0x5b, 0x25, 0x72, 0x64, 0x33, 0x5d, 0x3b,
  0x0a, 0x09, 0x6c, 0x64, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e,
  0x75, 0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x32, 0x33, 0x2c, 0x20, 0x5b,
  0x25, 0x72, 0x64, 0x33, 0x2b, 0x34, 0x5d, 0x3b, 0x0a, 0x09, 0x73, 0x65,
  0x74, 0x70, 0x2e, 0x67, 0x65, 0x2e, 0x73, 0x33, 0x32, 0x20, 0x09, 0x25,
  0x70, 0x33, 0x2c, 0x20, 0x25, 0x72, 0x32, 0x32, 0x2c, 0x20, 0x25, 0x72,
  0x32, 0x33, 0x3b, 0x0a, 0x09, 0x40, 0x25, 0x70, 0x33, 0x20, 0x62, 0x72,
  0x61, 0x20, 0x09, 0x4c, 0x42, 0x42, 0x30, 0x5f, 0x37, 0x3b, 0x0a, 0x2f,
  0x2f, 0x20, 0x25, 0x62, 0x62, 0x2e, 0x33, 0x3a, 0x0a, 0x09, 0x6c, 0x64,
  0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x75, 0x36, 0x34, 0x20, 0x09,
  0x25, 0x72, 0x64, 0x31, 0x35, 0x2c, 0x20, 0x5b, 0x53, 0x59, 0x43, 0x4c,
  0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f,
  0x50, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x39, 0x5d, 0x3b, 0x0a,
  0x09, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x75, 0x36,
  0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x31, 0x34, 0x2c, 0x20, 0x5b, 0x53,
  0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x62, 0x66,
  0x73, 0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x38,
  0x5d, 0x3b, 0x0a, 0x09, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x72, 0x61, 0x6d,
  0x2e, 0x75, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x31, 0x33, 0x2c,
  0x20, 0x5b, 0x53, 0x59, 0x43, 0x4c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
  0x5f, 0x62, 0x66, 0x73, 0x5f, 0x4f, 0x50, 0x5f, 0x70, 0x61, 0x72, 0x61,
  0x6d, 0x5f, 0x37, 0x5d, 0x3b, 0x0a, 0x09, 0x63, 0x76, 0x74, 0x2e, 0x73,
  0x36, 0x34, 0x2e, 0x73, 0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x64, 0x34,
  0x2c, 0x20, 0x25, 0x72, 0x32, 0x32, 0x3b, 0x0a, 0x09, 0x61, 0x64, 0x64,
  0x2e, 0x73, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x35, 0x2c, 0x20,
  0x25, 0x72, 0x64, 0x31, 0x34, 0x2c, 0x20, 0x25, 0x72, 0x64, 0x32, 0x34,
  0x3b, 0x0a, 0x09, 0x73, 0x68, 0x6c, 0x2e, 0x62, 0x36, 0x34, 0x20, 0x09,
  0x25, 0x72, 0x64, 0x32, 0x38, 0x2c, 0x20, 0x25, 0x72, 0x64, 0x34, 0x2c,
  0x20, 0x32, 0x3b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x2e, 0x73, 0x36, 0x34,
  0x20, 0x09, 0x25, 0x72, 0x64, 0x33, 0x34, 0x2c, 0x20, 0x25, 0x72, 0x64,
  0x31, 0x33, 0x2c, 0x20, 0x25, 0x72, 0x64, 0x32, 0x38, 0x3b, 0x0a, 0x4c,
  0x42, 0x42, 0x30, 0x5f, 0x34, 0x3a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x3d, 0x3e, 0x54, 0x68, 0x69, 0x73,
  0x20, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x4c, 0x6f, 0x6f, 0x70, 0x20,
  0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x3a, 0x20, 0x44, 0x65, 0x70, 0x74,
  0x68, 0x3d, 0x31, 0x0a, 0x09, 0x6c, 0x64, 0x2e, 0x67, 0x6c, 0x6f, 0x62,
  0x61, 0x6c, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x31, 0x35,
  0x2c, 0x20, 0x5b, 0x25, 0x72, 0x64, 0x33, 0x34, 0x5d, 0x3b, 0x0a, 0x09,
  0x6d, 0x75, 0x6c, 0x2e, 0x77, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x33, 0x32,
  0x20, 0x09, 0x25, 0x72, 0x64, 0x32, 0x39, 0x2c, 0x20, 0x25, 0x72, 0x31,
  0x35, 0x2c, 0x20, 0x34, 0x3b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x2e, 0x73,
  0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x33, 0x30, 0x2c, 0x20, 0x25,
  0x72, 0x64, 0x31, 0x31, 0x2c, 0x20, 0x25, 0x72, 0x64, 0x32, 0x39, 0x3b,
  0x0a, 0x09, 0x6c, 0x64, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e,
  0x75, 0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x31, 0x36, 0x2c, 0x20, 0x5b,
  0x25, 0x72, 0x64, 0x33, 0x30, 0x5d, 0x3b, 0x0a, 0x09, 0x73, 0x65, 0x74,
  0x70, 0x2e, 0x6e, 0x65, 0x2e, 0x73, 0x33, 0x32, 0x20, 0x09, 0x25, 0x70,
  0x34, 0x2c, 0x20, 0x25, 0x72, 0x31, 0x36, 0x2c, 0x20, 0x30, 0x3b, 0x0a,
  0x09, 0x40, 0x25, 0x70, 0x34, 0x20, 0x62, 0x72, 0x61, 0x20, 0x09, 0x4c,
  0x42, 0x42, 0x30, 0x5f, 0x36, 0x3b, 0x0a, 0x2f, 0x2f, 0x20, 0x25, 0x62,
  0x62, 0x2e, 0x35, 0x3a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f,
  0x2f, 0x20, 0x20, 0x20, 0x69, 0x6e, 0x20, 0x4c, 0x6f, 0x6f, 0x70, 0x3a,
  0x20, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x3d, 0x42, 0x42, 0x30, 0x5f,
  0x34, 0x20, 0x44, 0x65, 0x70, 0x74, 0x68, 0x3d, 0x31, 0x0a, 0x09, 0x63,
  0x76, 0x74, 0x2e, 0x73, 0x36, 0x34, 0x2e, 0x73, 0x33, 0x32, 0x20, 0x09,
  0x25, 0x72, 0x64, 0x38, 0x2c, 0x20, 0x25, 0x72, 0x31, 0x35, 0x3b, 0x0a,
  0x09, 0x6c, 0x64, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x75,
  0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x31, 0x37, 0x2c, 0x20, 0x5b, 0x25,
  0x72, 0x64, 0x35, 0x5d, 0x3b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x2e, 0x73,
  0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x31, 0x38, 0x2c, 0x20, 0x25, 0x72,
  0x31, 0x37, 0x2c, 0x20, 0x31, 0x3b, 0x0a, 0x09, 0x73, 0x68, 0x6c, 0x2e,
  0x62, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x33, 0x31, 0x2c, 0x20,
  0x25, 0x72, 0x64, 0x38, 0x2c, 0x20, 0x32, 0x3b, 0x0a, 0x09, 0x61, 0x64,
  0x64, 0x2e, 0x73, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x33, 0x32,
  0x2c, 0x20, 0x25, 0x72, 0x64, 0x31, 0x34, 0x2c, 0x20, 0x25, 0x72, 0x64,
  0x33, 0x31, 0x3b, 0x0a, 0x09, 0x73, 0x74, 0x2e, 0x67, 0x6c, 0x6f, 0x62,
  0x61, 0x6c, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09, 0x5b, 0x25, 0x72, 0x64,
  0x33, 0x32, 0x5d, 0x2c, 0x20, 0x25, 0x72, 0x31, 0x38, 0x3b, 0x0a, 0x09,
  0x61, 0x64, 0x64, 0x2e, 0x73, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64,
  0x33, 0x33, 0x2c, 0x20, 0x25, 0x72, 0x64, 0x31, 0x30, 0x2c, 0x20, 0x25,
  0x72, 0x64, 0x33, 0x31, 0x3b, 0x0a, 0x09, 0x73, 0x74, 0x2e, 0x67, 0x6c,
  0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09, 0x5b, 0x25,
  0x72, 0x64, 0x33, 0x33, 0x5d, 0x2c, 0x20, 0x25, 0x72, 0x31, 0x34, 0x3b,
  0x0a, 0x09, 0x73, 0x74, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e,
  0x75, 0x33, 0x32, 0x20, 0x09, 0x5b, 0x25, 0x72, 0x64, 0x31, 0x35, 0x5d,
  0x2c, 0x20, 0x25, 0x72, 0x31, 0x33, 0x3b, 0x0a, 0x09, 0x6c, 0x64, 0x2e,
  0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x75, 0x33, 0x32, 0x20, 0x09,
  0x25, 0x72, 0x32, 0x33, 0x2c, 0x20, 0x5b, 0x25, 0x72, 0x64, 0x33, 0x2b,
  0x34, 0x5d, 0x3b, 0x0a, 0x4c, 0x42, 0x42, 0x30, 0x5f, 0x36, 0x3a, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x20,
  0x20, 0x69, 0x6e, 0x20, 0x4c, 0x6f, 0x6f, 0x70, 0x3a, 0x20, 0x48, 0x65,
  0x61, 0x64, 0x65, 0x72, 0x3d, 0x42, 0x42, 0x30, 0x5f, 0x34, 0x20, 0x44,
  0x65, 0x70, 0x74, 0x68, 0x3d, 0x31, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x2e,
  0x73, 0x33, 0x32, 0x20, 0x09, 0x25, 0x72, 0x32, 0x32, 0x2c, 0x20, 0x25,
  0x72, 0x32, 0x32, 0x2c, 0x20, 0x31, 0x3b, 0x0a, 0x09, 0x61, 0x64, 0x64,
  0x2e, 0x73, 0x36, 0x34, 0x20, 0x09, 0x25, 0x72, 0x64, 0x33, 0x34, 0x2c,
  0x20, 0x25, 0x72, 0x64, 0x33, 0x34, 0x2c, 0x20, 0x34, 0x3b, 0x0a, 0x09,
  0x73, 0x65, 0x74, 0x70, 0x2e, 0x6c, 0x74, 0x2e, 0x73, 0x33, 0x32, 0x20,
  0x09, 0x25, 0x70, 0x35, 0x2c, 0x20, 0x25, 0x72, 0x32, 0x32, 0x2c, 0x20,
  0x25, 0x72, 0x32, 0x33, 0x3b, 0x0a, 0x09, 0x40, 0x25, 0x70, 0x35, 0x20,
  0x62, 0x72, 0x61, 0x20, 0x09, 0x4c, 0x42, 0x42, 0x30, 0x5f, 0x34, 0x3b,
  0x0a, 0x4c, 0x42, 0x42, 0x30, 0x5f, 0x37, 0x3a, 0x0a, 0x09, 0x62, 0x61,
  0x72, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x20, 0x09, 0x30, 0x3b, 0x0a, 0x09,
  0x72, 0x65, 0x74, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
  0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20,
  0x2d, 0x2d, 0x20, 0x45, 0x6e, 0x64, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74,
  0x69, 0x6f, 0x6e, 0x0a, 0x7d, 0x0a, 0x0a
};
const char *const SYCL_bfs_op_cpp_bin_nvptx64_features[] = {
  0
};
const kernel_binary_info SYCL_bfs_op_cpp_bin_nvptx64_info = {
  "nvptx64",
  64,
  SYCL_bfs_op_cpp_bin_nvptx64,
  sizeof(SYCL_bfs_op_cpp_bin_nvptx64),
  SYCL_bfs_op_cpp_bin_nvptx64_features
};

} // namespace
} // namespace detail
} // namespace sycl
} // namespace cl
class bfs_OP;

//
// SYCL kernel info for: bfs_OP
//
namespace cl {
namespace sycl {
namespace detail {
namespace {

template <>
struct kernel_info< bfs_OP > {
  static const char* name;

  static const size_t bin_count;
  static const kernel_definition<46> bin_info[];

  static const std::array<field_descriptor, 10> fields;
  static const std::array<::cl::sycl::detail::parameter_kind, 46> arg_desc;

using type_id_5 = detail::host_arg_container; // opencl_mirror_convert device_arg_container
struct /* accessor_device_base */ type_id_4 {
  type_id_5 var_id_0; // m_deviceArgs
  };
struct /* accessor_common */ alignas(8) type_id_3 : type_id_4 {
  };
struct /* accessor_buffer_interface */ type_id_2 : type_id_3 {
  };
struct /* accessor */ alignas(8) type_id_1 : type_id_2 {
  };
using type_id_10 = detail::host_arg_container; // opencl_mirror_convert device_arg_container
struct /* accessor_device_base */ type_id_9 {
  type_id_10 var_id_0; // m_deviceArgs
  };
struct /* accessor_common */ alignas(8) type_id_8 : type_id_9 {
  };
struct /* accessor_buffer_interface */ type_id_7 : type_id_8 {
  };
struct /* accessor */ alignas(8) type_id_6 : type_id_7 {
  };
struct type_id_0 {
  type_id_1 var_id_0;
  type_id_1 var_id_1;
  type_id_1 var_id_2;
  int var_id_3;
  type_id_1 var_id_4;
  type_id_1 var_id_5;
  type_id_6 var_id_6;
  type_id_6 var_id_7;
  type_id_1 var_id_8;
  type_id_1 var_id_9;
  };
using mirror_type_0 = type_id_0;

};
const std::array<field_descriptor, 10> kernel_info< bfs_OP >::fields = {{
  { sizeof(mirror_type_0::var_id_0.var_id_0),
    offsetof(mirror_type_0, var_id_0.var_id_0),
    ::cl::sycl::detail::parameter_class::value,
    0 },
  { sizeof(mirror_type_0::var_id_1.var_id_0),
    offsetof(mirror_type_0, var_id_1.var_id_0),
    ::cl::sycl::detail::parameter_class::value,
    5 },
  { sizeof(mirror_type_0::var_id_2.var_id_0),
    offsetof(mirror_type_0, var_id_2.var_id_0),
    ::cl::sycl::detail::parameter_class::value,
    10 },
  { sizeof(mirror_type_0::var_id_3),
    offsetof(mirror_type_0, var_id_3),
    ::cl::sycl::detail::parameter_class::user_defined,
    15 },
  { sizeof(mirror_type_0::var_id_4.var_id_0),
    offsetof(mirror_type_0, var_id_4.var_id_0),
    ::cl::sycl::detail::parameter_class::value,
    16 },
  { sizeof(mirror_type_0::var_id_5.var_id_0),
    offsetof(mirror_type_0, var_id_5.var_id_0),
    ::cl::sycl::detail::parameter_class::value,
    21 },
  { sizeof(mirror_type_0::var_id_6.var_id_0),
    offsetof(mirror_type_0, var_id_6.var_id_0),
    ::cl::sycl::detail::parameter_class::value,
    26 },
  { sizeof(mirror_type_0::var_id_7.var_id_0),
    offsetof(mirror_type_0, var_id_7.var_id_0),
    ::cl::sycl::detail::parameter_class::value,
    31 },
  { sizeof(mirror_type_0::var_id_8.var_id_0),
    offsetof(mirror_type_0, var_id_8.var_id_0),
    ::cl::sycl::detail::parameter_class::value,
    36 },
  { sizeof(mirror_type_0::var_id_9.var_id_0),
    offsetof(mirror_type_0, var_id_9.var_id_0),
    ::cl::sycl::detail::parameter_class::value,
    41 }
}};
const std::array<::cl::sycl::detail::parameter_kind, 46> kernel_info< bfs_OP >::arg_desc = {{
  static_cast<::cl::sycl::detail::parameter_kind>(2) /* Pointer - __global int * */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - signed char */,
  static_cast<::cl::sycl::detail::parameter_kind>(2) /* Pointer - __global int * */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - signed char */,
  static_cast<::cl::sycl::detail::parameter_kind>(2) /* Pointer - __global int * */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - signed char */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - int */,
  static_cast<::cl::sycl::detail::parameter_kind>(2) /* Pointer - __global int * */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - signed char */,
  static_cast<::cl::sycl::detail::parameter_kind>(2) /* Pointer - __global int * */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - signed char */,
  static_cast<::cl::sycl::detail::parameter_kind>(2) /* Pointer - __global int * */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - signed char */,
  static_cast<::cl::sycl::detail::parameter_kind>(2) /* Pointer - __global int * */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - signed char */,
  static_cast<::cl::sycl::detail::parameter_kind>(2) /* Pointer - __global int * */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - signed char */,
  static_cast<::cl::sycl::detail::parameter_kind>(2) /* Pointer - __global int * */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - class cl::sycl::device_index_array */,
  static_cast<::cl::sycl::detail::parameter_kind>(1) /* Normal - signed char */,
}};
const char* kernel_info< bfs_OP >::name = "SYCL_class_bfs_OP";
const size_t kernel_info< bfs_OP >::bin_count = 1;
const kernel_definition<46> kernel_info< bfs_OP >::bin_info[] = {
  {&SYCL_bfs_op_cpp_bin_nvptx64_info, {{true, false, false, false, false, true, false, false, false, false, true, false, false, false, false, true, true, false, false, false, false, true, false, false, false, false, true, false, false, false, false, true, false, false, false, false, true, false, false, false, false, true, false, false, false, false, }}},
  {0, {}}
};

} // namespace
} // namespace detail
} // namespace sycl
} // namespace cl
#endif // CODEPLAY_SYCL_bfs_op_cpp_STUB
